1. 최초 설정 : Git을 처음 설치하고 나서 한번만 하면 되는 설정

# Git 버전 확인
git --version

# 사용자 이름 설정 (커밋 기록에 사용될 이름)
git config --global user.name "Yeujeen"

# 사용자 이메일 설정 (커밋 기록에 사용될 이메일)
git config --global user.email "yyeujeen@gmail.com"

# 설정된 이름과 이메일 확인
git config user.name
git config user.email

# 줄바꿈 문자(Line Ending) 설정 (운영체제 간 호환성 문제 해결)
# 윈도우(Windows) 사용자용
git config --global core.autocrlf true
# 맥(Mac) 또는 리눅스(Linux) 사용자용
git config --global core.autocrlf input



2. Git 저장소 만들기(Repository Management)
# 'git'이라는 이름의 새 폴더(디렉토리) 생성
mkdir git

# 'git' 폴더로 이동
cd git

# 현재 폴더의 모든 파일 및 폴더 목록 보기 (숨김 파일 포함)
ls -al

# 현재 폴더를 Git 저장소로 초기화 (.git 폴더가 생성됨)
git init

# Git 저장소 삭제 (버전 관리 중단, .git 폴더를 삭제)
rm -rf .git


3. Git의 3가지 작업 공간 : Git은 3가지 공간을 통해 버전을 관리합니다.

Working Directory (작업 디렉토리): 현재 내가 작업하고 있는 실제 파일들이 있는 공간.
Staging Area (스테이징 영역): 다음 커밋(버전)에 포함시킬 파일들을 미리 모아두는 임시 공간.
Repository (.git directory): 프로젝트의 모든 변경 이력(커밋들)이 영구적으로 저장되는 공간.


4.작업 흐름(Workflow)

# --- 1. 파일 생성 및 수정 (Working Directory) ---
# 'a.txt' 파일을 만들고 "hello word!" 내용을 추가
echo hello word! > a.txt
# 'b.txt', 'c.txt' 등 다른 파일들도 생성/수정

# 현재 폴더의 파일 목록 확인
ls

# --- 2. 변경된 파일을 스테이징 영역에 추가 (Staging Area) ---
# 확장자가 .txt인 모든 파일을 스테이징 영역에 추가
git add *.txt

# --- 3. 상태 확인 ---
# 현재 Git 저장소의 상태를 자세히 보여줌 (어떤 파일이 변경되고, 스테이징되었는지 등)
git status

# 상태를 간략하게 보여줌 (-s는 short의 약자)
git status -s

# --- 4. 스테이징 취소 (필요시) ---
# 스테이징 영역에 있는 모든 파일을 다시 작업 디렉토리로 내림 (Unstage)
git rm --cached *

# --- 5. 커밋하기 (Repository) ---
# 스테이징 영역에 있는 파일들을 하나의 버전(커밋)으로 저장소에 기록
# 이 명령어를 실행하면 커밋 메시지를 입력하는 편집기가 열림
git commit

# --- 6. 커밋 이력 확인 ---
# 현재까지의 모든 커밋 기록을 최신순으로 보여줌
git log
